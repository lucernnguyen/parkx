server:
  port: ${SERVER_PORT:8080}
  path: ${SERVER_PATH:}
spring:
  application:
    name: parkz
  profiles:
    active: ${ENV:dev}
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/parkz}
    username: ${SPRING_DATASOURCE_USER:user}
    password: ${SPRING_DATASOURCE_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      pool-name: hikari-score
      auto-commit: true
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true
        reWriteBatchedInserts: true
      minimum-idle: 3
      maximum-pool-size: 20
    type: com.zaxxer.hikari.HikariDataSource
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        show_sql: true
        default_schema: public
        jdbc:
          batch_size: 100
        order_inserts: true
        cache:
          flush_on_boot: false
          use_query_cache: true
          use_second_level_cache: true
          use_structured_entries: true
          keys_factory: org.parkz.cache.HibernateCustomCacheKeysFactory
          region:
            factory_class: org.redisson.hibernate.RedissonRegionFactory
          region_prefix: HIBERNATE_2ND_CACHE
          redisson: # cache definition applied to all caches in entity region
            fallback: true
            entity:
              expiration:
                time_to_live: 600000
                max_idle_time: 300000
            # cache definition applied to all caches in query region
            query:
              expiration:
                time_to_live: 600000
                max_idle_time: 300000
    hibernate:
      ddl-auto: update
      #    ddl-auto: validate
      #    ddl-auto: create-drop
      naming:
        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
        physical-strategy: org.hibernate.boot.model.naming.CamelCaseToUnderscoresNamingStrategy
    open-in-view: false
  security:
    user:
      name: sample
      password: password
  cache:
    type: redis
  redis:
    redisson:
      file: classpath:redisson.yaml
  cloud:
    openfeign:
      client:
        config:
          default:
            connectTimeout: 5000
            readTimeout: 10000
            logger-level: full
          paypal:
            url: ${SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_PAYPAL_URL:https://api-m.sandbox.paypal.com}
            logger-level: full
          currency:
            url: ${SPRING_CLOUD_OPENFEIGN_CLIENT_CONFIG_CURRENCY_URL:https://open.er-api.com}
            logger-level: full

  firebase:
    config-path: ${SPRING_FIREBASE_CONFIG_PATH:path}
  mail:
    host: ${MAIL_HOST:smtp.gmail.com}
    port: ${MAIL_PORT:587}
    username: ${MAIL_USERNAME:username}
    password: ${MAIL_PASSWORD:password}
    from: ${MAIL_FROM:mail.from}
    properties:
      mail.smtp:
        starttls.enable: 'true'
        auth: 'true'
  thymeleaf:
    check-template-location: false
    check-template: false

common:
  rest:
    open-api:
      servers: ${OPEN_API_SERVER:http://localhost:8080,/,https://api.fpt-ec.click/parkx}
  security:
    cors:
      allowed-origins: ${CORS_ORIGINS:http://localhost:8888}
      allowed-methods: ${CORS_METHODS:*}
      allowed-headers: ${CORS_HEADERS:*}
    path-matcher:
      permit-all-path-patterns:
        - /webjars/swagger-ui/**
        - /v3/api-docs/**
        - /swagger-resources/**
        - /webjars/**
        - /swagger-ui/**
        - /swagger-ui.html
        - /null/swagger-resources/**
        - /actuator/**
        - /mock/**
        - /api/v1/app/*/public/**
      ignore-authorization:
        - /api/v1/auth/**
    oauth2-resource-server:
      firebase:
        issuer-uri: https://securetoken.google.com/parkx-22f01
        jwk-set-uri: https://www.googleapis.com/robot/v1/metadata/jwk/securetoken@system.gserviceaccount.com
    api-key:
      - path: /api/v1/system/users/admin/create
        key: zLp63CqnIjCN4n9z

logging:
  level:
    # org.springframework.web.filter.CommonsRequestLoggingFilter: debug
    org.springframework.fastboot.security.interceptor: off
    org.parkz.infrastructure.client: debug


paypal:
  app-name: ${PAYPAL_APP_NAME:parkx-local}
  client-id: ${PAYPAL_CLIENT_ID:AcsOD22Hu8gEJTzaw-VkYmzcbZ4sGE-KTl1q6nhR2R4zn0VU8JcT1NfzEp3S9-31BEPoUWu2PXkoEWYH}
  secret-key: ${PAYPAL_SECRET_KEY:EM-5YL4AsRjxTW5P6S96uzsbw-Fb5b2t2OXaZudzt5ZkSU8XbVkRXh1Slia9predd589OA-fh8w69Cg7}
  deposit-url: ${PAYPAL_DEPOSIT_URL:http://localhost:8080/api/v1/app/wallet/public/deposit}

mobile:
  app-open-url: ${MOBILE_APP_OPEN_URL:https://carparkingapp.page.link/main}
